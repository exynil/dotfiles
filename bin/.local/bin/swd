#!/bin/bash

source "$HOME/.config/swd/swd.conf"

apikey="$(cat $apikey_file)"

while getopts ":C:a:p:c:r:s:o:l:" opt; do
  case ${opt} in
  C)
    colors="${OPTARG}"
    ;;
  a)
    atleast="${OPTARG}"
    ;;
  p)
    purity="${OPTARG}"
    ;;
  c)
    categories="${OPTARG}"
    ;;
  r)
    ratios="${OPTARG}"
    ;;
  s)
    sorting="${OPTARG}"
    ;;
  o)
    order="${OPTARG}"
    ;;
  l)
    location="${OPTARG}"
    ;;
  \?)
    echo "Invalid option: -$OPTARG" >&2
    exit 1
    ;;
  :)
    echo "Option -$OPTARG requires an argument." >&2
    exit 1
    ;;
  esac
done

# Address for the wallpaper website
wallpaper_url="https://wallhaven.cc/api/v1/search?"

wallpaper_url+="apikey=$apikey"

[[ -n "$categories" ]] && wallpaper_url+="&categories=$categories"

[[ -n "$purity" ]] && wallpaper_url+="&purity=$purity"

[[ -n "$order" ]] && wallpaper_url+="&order=$order"

[[ -n "$colors" ]] && wallpaper_url+="&colors=$colors"

[[ -n "$ratios" ]] && wallpaper_url+="&ratios=$ratios"

[[ -n "$atleast" ]] && wallpaper_url+="&atleast=$atleast"

case "$sorting" in
"latest")
  wallpaper_url+="&sorting=date_added"
  ;;
"views")
  wallpaper_url+="&sorting=views"
  ;;
"toplist")
  wallpaper_url+="&sorting=toplist"
  ;;
"favorites")
  wallpaper_url+="&sorting=favorites"
  ;;
*)
  wallpaper_url+="&sorting=random"
  ;;
esac

# Get the last page number from the API
last_page=$(curl -s -L "$wallpaper_url" | jq -r '.meta.last_page')

# Add random page parameter to the URL
wallpaper_url+="&page=$((1 + RANDOM % last_page))"

# Fetch response from the API
response=$(curl -s -L "$wallpaper_url")

# Choose a random index from the data array
index=$((RANDOM % 24))

# Extract download URL and file size for the selected wallpaper
download_url=$(echo "$response" | jq -r ".data[$index].path")
dest_file_size=$(echo "$response" | jq -r ".data[$index].file_size")

# Set wallpaper file path
wallpaper="$location/${download_url##*/}"

# Function to show progress while downloading wallpaper
show_progress() {
  touch "$1"
  local_file_size=$(stat -c%s "$1")
  dest_file_size="$2"

  while [ "$local_file_size" != "$dest_file_size" ]; do
    percent=$(("$local_file_size" * 100 / "$dest_file_size"))
    notify-send --hint=string:x-dunst-stack-tag:swd -h int:value:$percent "Downloading... $percent%"
    local_file_size=$(stat -c%s "$1")
    sleep 0.1
  done
}

# Start the progress display function in the background
show_progress "$wallpaper" "$dest_file_size" &

curl -s -L "$download_url" -o "$wallpaper"

echo "$wallpaper"
