#!/bin/bash

# Define a help message
_help_message() {
    echo "ERROR. Must pass a single argument."
    echo "Examples of valid time units: 10s, 5m, 2h"
    echo "A number without a unit is read as NUM minutes."
}

# Show the help message if arguments are not equal to one.
[ "$#" -eq 1 ] || {
    _help_message
    exit 1
}

# Convert the argument into a human-readable string: to calculate the
# difference between the time this script starts and ends.
arg="$1"
case "$arg" in
*s) past="${arg%?} seconds ago" ;;
*m) past="${arg%?} minutes ago" ;;
*h) past="${arg%?} hours ago" ;;
*d) echo "Days? TMR Made Ridiculous!" && exit 1 ;;
*)
    arg="${arg}m"
    past="${arg%?} minutes ago"
    ;;
esac

time_now="$(date +%T)"
time_after="$(date --date="${past% ago}" +%T)"

# Function to check if optional dependencies are in the PATH
_depcheck() {
    command -v "$1" 2>/dev/null
}

# The message to print when the timer is done.  This will echo a message
# in the terminal and, if optional dependencies are present, set a
# desktop notification while ringing the alarm bell for a short time.
_notify() {
    message="tmr elapsed at $time_after (started $past)"

    echo "$message"

    [ "$(_depcheck notify-send)" ] && notify-send -i clock "$message"

    play-sound "long-expected.ogg"
}

# Set the timer and send notification when its done
echo "tmr started at $time_now"
notify-send "tmr started at $time_now"
sleep "$arg" && _notify
